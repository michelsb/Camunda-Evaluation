############################
# Spring Boot - Configuration
############################

server.port=8088
management.endpoints.web.exposure.include=*

############################
# Camunda 7 - Configuration
############################

# spring.application.name= camunda7
# camunda.bpm.enabled=true
# camunda.bpm.admin-user.id=admin
# camunda.bpm.admin-user.password=admin
# camunda.bpm.admin-user.email=adminus@adminius.io
# camunda.bpm.admin-user.first-name=Adminus
# camunda.bpm.admin-user.last-name=Administratius
# camunda.bpm.client.base-url=http://localhost:8088/engine-rest
# camunda.autoDeploy.enabled=false
# camunda.bpm.database.schema-update=true
# camunda.bpm.filter.create=true
# camunda.bpm.job-execution.enabled=true
# camunda.bpm.database.type=postgres
# spring.datasource.url=jdbc:postgresql://localhost:5432/camunda7db?autoReconnect=true
# spring.datasource.username=postgres
# spring.datasource.password=112505
# spring.datasource.driver-class-name=org.postgresql.Driver

############################
# Camunda 8 - Configuration
############################

# in cloud:
#zeebe.client.cloud.region=bru-2
#zeebe.client.cloud.clusterId=XXX
#zeebe.client.cloud.clientId=XXX
#zeebe.client.cloud.clientSecret=XXX

# or local
zeebe.client.broker.gateway-address=127.0.0.1:26500
zeebe.client.security.plaintext=true

zeebe.client.worker.threads=32
#zeebe.client.worker.max-jobs-active=2000

################################
# Main benchmark configurations
################################

benchmark.startProcesses=true
benchmark.startPiPerSecond=1
benchmark.taskCompletionDelay=200
benchmark.bpmnProcessId=benchmark
# Set this to false if you only want to start processes but don't want any workers
benchmark.startWorkers=true
benchmark.jobType=benchmark-task
# Create multiple workers to respond to multiple job types
# By default, only one worker is created and will listen for job type defined above.
# If the value is set to `2`, for example, 2 workers are created: `benchmark-task-1` and `benchmark-task-2`
benchmark.multipleJobTypes=0
# 5 minutes warmup:  5*60*1000
benchmark.warmupPhaseDurationMillis=300000
# can be "none" or "backpressure" or "jobRatio" or "piException"
benchmark.startRateAdjustmentStrategy=piRatio

benchmark.payloadPath=classpath:bpmn/typical_payload.json

benchmark.autoDeployProcess=true
benchmark.bpmnResource=classpath:bpmn/typical_process.bpmn

benchmark.starterId=benchmarkStarter1

########################################
# Parameters benchmark configurations
########################################

# Specifies the maximum amount of tasks that can be fetched within one request
benchmark.maxJobs=32
# The time for how long a job is exclusively assigned for this worker (in milliseconds)
benchmark.lockTimeout=300000
# Set the request timeout for activate job request used to poll for new job (in milliseconds)
benchmark.requestTimeout=10000
# Define the org.camunda.bpm.client.backoff between two requests (in milliseconds). When 0, use the default Exponential Backoff Supplier. Otherwise, specify fixed number of millis backoff.
benchmark.fixedBackOffDelay=100

benchmark.maxBackpressurePercentage=10.0
benchmark.startPiReduceFactor=0.1
benchmark.startPiIncreaseFactor=0.4

async.corePoolSize=5
async.maxPoolSize=100
async.queueCapacity=1000

scheduler.poolSize=10

################################
# BPMN Message Scenario
################################

#benchmark.bpmnResource=classpath:bpmn/msg_process.bpmn
#benchmark.messageScenario=classpath:bpmn/sample-msg-scenario.json
#benchmark.messagesTtl=60
#benchmark.messagesScenariosPerSecond=10
#benchmark.delayBetweenMessages=10000
#benchmark.messagesLoadDuration=1000





